{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="generator" content="plentymarkets" />

{% if ceresConfig.global.favicon is empty %}
    {% set favicon = url ~ '/tpl/favicon_' ~ webstoreConfig.webstoreId ~ '.ico' %}
{% else %}
    {% set favicon = ceresConfig.global.favicon %}
{% endif %}

<link rel="icon" type="img/ico" href="{{ favicon }}">

{% set canonicalUrl = services.url.getCanonicalURL() %}
{% set languageUrls = services.url.getLanguageURLs() %}

{% if canonicalUrl is not null %}
    <link rel="canonical" href="{{ canonicalUrl }}">
{% endif %}

{% if services.url.isCanonical() %}
    {% for language, url in languageUrls %}
        <link rel="alternate" hreflang="{{language}}" href="{{url}}"/>
    {% endfor %}
{% endif %}

<style data-font="Custom-Font">
    {% set customFont =
        {
            regular: config('Ceres.custom-font-regular'),
            bold: config('Ceres.custom-font-bold'),
            italic: config('Ceres.custom-font-italic'),
            boldItalic: config('Ceres.custom-font-bold-italic')
        }
    %}

    {% if customFont.regular %}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.regular }}");
    }
    {% endif %}
    {% if customFont.bold %}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.bold }}");
        font-weight: bold;
    }
    {% endif %}
    {% if customFont.italic %}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.italic }}");
        font-style: italic;
    }
    {% endif %}
    {% if customFont.boldItalic %}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.boldItalic }}");
        font-weight: bold;
        font-style: italic;
    }
    {% endif %}

    {# FIX: do not display icons until fontawesome is loaded #}
    .icons-loading .fa { visibility: hidden !important; }
</style>

{% set iconCSS = plugin_path("Ceres") ~ "/css/ceres-icons.css" %}
<noscript data-load-css>
    <link rel="stylesheet" type="text/css" href="{{ plugin_path("Ceres") }}/css/ceres-icons.css">
</noscript>

{% set defaultCSS = plugin_path("Ceres") ~ "/css/" ~ assetName ~ ".css?v=" ~ buildHash %}
{% set defaultSCSS = plugin_path("Ceres") ~ "/css/" ~ assetName ~ ".scss?v=" ~ buildHash %}

<link rel="preload" as="style" href="{{ defaultCSS }}">
{% if LayoutContainer.show("Ceres::Template.StyleOverwrite") | trim is empty %}
    <link rel="stylesheet" href="{{ defaultCSS }}"{% if isShopBuilder %} data-sass-root="{{ plugin_path('Ceres') }}" data-sass-original="{{ defaultSCSS }}"{% endif %}>
{% endif %}

{% if isShopBuilder %}
    <link rel="stylesheet" href="{{ plugin_path("Ceres") }}/css/ceres-shopbuilder.css?v={{ buildHash }}">
{% endif %}

{# add preload polyfill #}
<script type="application/javascript">
    if(document.fonts && document.fonts.onloadingdone) {
        document.fonts.onloadingdone = function(evt) {
            if(evt.target.check("1em FontAwesome")) {
                document.documentElement.classList.remove('icons-loading');
            }
        }
    } else {
        document.documentElement.classList.remove('icons-loading');
    }
</script>

{{ LayoutContainer.show("Ceres::Template.StyleOverwrite") }}

<!-- Extend the existing style with a template -->
{{ LayoutContainer.show("Ceres::Template.Style") }}

{{ get_shop_builder_styles() }}
